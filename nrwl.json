{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "github>ng-easy/renovate-config:default",
    ":label(dependencies)"
  ],
  "packageRules": [
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^tslib",
        "^ts-node",
        "^zone\\.js",
        "^cypress$",
        "^jest",
        "^ts-jest"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "enabled": false
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^typescript"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "enabled": false
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^rxjs"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "enabled": false
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^@angular/",
        "^zone\\.js",
        "^@ngrx/",
        "^@ng-easy/"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin"
      ],
      "semanticCommitType": "fix"
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^@nrwl/",
        "^nx$",
        "^@angular-devkit/",
        "^ng-packagr",
        "^tslib",
        "^ts-node",
        "^@angular-eslint/"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin"
      ],
      "semanticCommitType": "chore"
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackagePatterns": [
        "^@nrwl/",
        "^nx$"
      ],
      "matchFiles": [
        "package.json"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin"
      ],

      "postUpgradeTasks": {
        "commands": [
          "[ -x ./.github/scripts/install-ubuntu-packages.sh ] && ./.github/scripts/install-ubuntu-packages.sh",
          "npm ci --ignore-scripts",
          "npm run prepare --if-present",
          "npx --no-install nx migrate {{{depName}}} --from={{{depName}}}@{{{replace '^[^\\d]*' '' currentValue}}} --to={{{depName}}}@{{{replace '^[^\\d]*' '' newValue}}}",
          "npx --no-install nx migrate --run-migrations=migrations.json || true",
          "rm -f migrations.json || true",
          "npx --no-install nx format:write",
          "npx --no-install nx workspace-lint",
          "npx --no-install nx affected --target=lint --all --parallel --fix",
          "npx --no-install nx affected --target=test --all --parallel"
        ],
        "fileFilters": [
          "**/**"
        ]
      }
    },
    {
      "groupName": "Nrwl workspace",
      "matchManagers": [
        "npm"
      ],
      "matchPackageNames": [
        "@angular/cli",
        "@angular/core",
        "@angular/cdk",
        "@angular/material",
        "@angular-eslint/schematics",
        "@ngrx/store",
        "@ngrx/component-store"
      ],
      "matchFiles": [
        "package.json"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin"
      ],
      "postUpgradeTasks": {
        "commands": [
          "[ -x ./.github/scripts/install-ubuntu-packages.sh ] && ./.github/scripts/install-ubuntu-packages.sh",
          "npm ci --ignore-scripts",
          "npm run prepare --if-present",
          "npx --no-install nx migrate {{{depName}}} --from={{{depName}}}@{{{replace '^[^\\d]*' '' currentValue}}} --to={{{depName}}}@{{{replace '^[^\\d]*' '' newValue}}}",
          "npx --no-install nx migrate --run-migrations=migrations.json || true",
          "rm -f migrations.json || true",
          "npx --no-install nx format:write",
          "npx --no-install nx workspace-lint"
        ],
        "fileFilters": [
          "**/**"
        ]
      }
    }
  ]
}
